name: Backend Continuous Deployment

on:
  push:
    branches:    
      - main
  workflow_dispatch:

env: 
  WORK_DIR: starter/backend
  REPO: 330073786310.dkr.ecr.us-east-1.amazonaws.com/backend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps: 

      # Checkout code
    - name: Checkout
      uses: actions/checkout@v4

      # Setup NodeJS
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
      
      # Install dependencies
    - name: Install pipenv
      run: cd ${{ env.WORK_DIR }} && pip install pipenv

    - name: Install package
      run: cd ${{ env.WORK_DIR }} && pipenv install --dev
      
      # Lint
    - name: Lint
      run: cd ${{ env.WORK_DIR }} && pipenv run lint
  
  test:
    runs-on: ubuntu-latest
    steps: 

      # Checkout code
    - name: Checkout
      uses: actions/checkout@v4

      # Setup Python
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10' 
      
      # Install dependencies
    - name: Install pipenv
      run: cd ${{ env.WORK_DIR }} && pip install pipenv

    - name: Install package
      run: cd ${{ env.WORK_DIR }} && pipenv install --dev
      
      # Test
    - name: Test
      run: cd ${{ env.WORK_DIR }} && pipenv run test

  build:
    runs-on: ubuntu-latest
    needs:
    - lint
    - test
    steps: 
      # Checkout code
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Docker build
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ${{ env.WORK_DIR }}
        tags: ${{env.REPO}}:${{github.sha}}
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      
    - uses: imranismail/setup-kustomize@v2
    - name: Deploy
      run: |
        cd "${{ env.WORK_DIR }}/k8s"
        aws eks update-kubeconfig --name cluster
        kustomize edit set image backend=${{env.REPO}}:${{github.sha}}
        kustomize build | kubectl apply -f -

      